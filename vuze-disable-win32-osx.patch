Index: vuze-4.3.0.4-disable-win32-osx/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java
===================================================================
--- vuze-4.3.0.4-disable-win32-osx/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java
+++ vuze-4.3.0.4-disable-win32-osx/com/aelitis/azureus/core/update/impl/AzureusRestarterImpl.java	2009-12-09 04:05:56.248849135 +0200
@@ -30,8 +30,6 @@
 import org.gudy.azureus2.platform.PlatformManager;
 import org.gudy.azureus2.platform.PlatformManagerFactory;
 import org.gudy.azureus2.platform.unix.ScriptAfterShutdown;
-import org.gudy.azureus2.platform.win32.access.AEWin32Access;
-import org.gudy.azureus2.platform.win32.access.AEWin32Manager;
 import org.gudy.azureus2.plugins.PluginInterface;
 import org.gudy.azureus2.plugins.platform.PlatformManagerException;
 import org.gudy.azureus2.pluginsimpl.local.PluginInitializer;
@@ -307,44 +305,7 @@
 
 		try {
 			int result;
-			AEWin32Access accessor = AEWin32Manager.getAccessor(true);
-			if (accessor == null) {
 				result = -123;
-			} else {
-				if (azRunner != null) {
-					// create a batch file to run the updater, then to restart azureus
-					// bceause the updater would restart azureus as administrator user
-					// and confuse the user
-					fileRestart = FileUtil.getUserFile("restart.bat");
-					String s = "title Azureus Updater Runner\r\n";
-					s += exeUpdater + " \"updateonly\"";
-					for (int i = 1; i < parameters.length; i++) {
-						s += " \"" + parameters[i].replaceAll("\\\"", "") + "\"";
-					}
-					s += "\r\n";
-					s += "start \"\" \"" + azRunner + "\"";
-					FileUtil.writeBytesAsFile(fileRestart.getAbsolutePath(), s.getBytes());
-
-					result = accessor.shellExecute(null, fileRestart.getAbsolutePath(),
-							null, SystemProperties.getApplicationPath(),
-							AEWin32Access.SW_SHOWMINIMIZED);
-				} else {
-					String execEXE = "\"-J" + getClassPath().replaceAll("\\\"", "")
-							+ "\" ";
-
-					for (int i = 0; i < properties.length; i++) {
-						execEXE += "\"-J" + properties[i].replaceAll("\\\"", "") + "\" ";
-					}
-
-					for (int i = 0; i < parameters.length; i++) {
-						execEXE += " \"" + parameters[i].replaceAll("\\\"", "") + "\"";
-					}
-
-					log.println("Launch via " + exeUpdater + " params " + execEXE);
-					result = accessor.shellExecute(null, exeUpdater, execEXE,
-							SystemProperties.getApplicationPath(), AEWin32Access.SW_NORMAL);
-				}
-			}
 
 			/*
 			 * Some results:
Index: vuze-4.3.0.4-disable-win32-osx/com/aelitis/azureus/ui/swt/views/skin/TorrentListViewsUtils.java
===================================================================
--- vuze-4.3.0.4-disable-win32-osx/com/aelitis/azureus/ui/swt/views/skin/TorrentListViewsUtils.java
+++ vuze-4.3.0.4-disable-win32-osx/com/aelitis/azureus/ui/swt/views/skin/TorrentListViewsUtils.java	2009-12-09 04:06:14.473095043 +0200
@@ -76,7 +76,6 @@
 import com.aelitis.azureus.util.DLReferals;
 import com.aelitis.azureus.util.DataSourceUtils;
 import com.aelitis.azureus.util.PlayUtils;
-import com.aelitis.azureus.util.win32.Win32Utils;
 
 /**
  * @author TuxPaper
@@ -615,17 +614,6 @@
 	 */
 	private static boolean runInMediaPlayer(String mediaFile) {
 
-		if (Constants.isWindows) {
-			String wmpEXE = Win32Utils.getWMP();
-			if (new File(wmpEXE).exists()) {
-				try {
-					Runtime.getRuntime().exec(wmpEXE + " \"" + mediaFile + "\"");
-					return true;
-				} catch (IOException e) {
-					Debug.out("error playing " + mediaFile + " via WMP " + mediaFile, e);
-				}
-			}
-		}
 		return false;
 	}
 
Index: vuze-4.3.0.4-disable-win32-osx/org/gudy/azureus2/platform/PlatformManagerFactory.java
===================================================================
--- vuze-4.3.0.4-disable-win32-osx/org/gudy/azureus2/platform/PlatformManagerFactory.java
+++ vuze-4.3.0.4-disable-win32-osx/org/gudy/azureus2/platform/PlatformManagerFactory.java	2009-12-09 04:05:56.249847333 +0200
@@ -48,23 +48,11 @@
 			if ( platform_manager == null && !force_dummy ){
 										  
 				try{
-					if ( getPlatformType() == PlatformManager.PT_WINDOWS ){
-						
-						platform_manager = org.gudy.azureus2.platform.win32.PlatformManagerImpl.getSingleton();
-						
-					}else if( getPlatformType() == PlatformManager.PT_MACOSX ){
-						
-	                    platform_manager = org.gudy.azureus2.platform.macosx.PlatformManagerImpl.getSingleton();
-	                    
-					}else if( getPlatformType() == PlatformManager.PT_UNIX ){
+					if( getPlatformType() == PlatformManager.PT_UNIX ){
 						
 						platform_manager = org.gudy.azureus2.platform.unix.PlatformManagerImpl.getSingleton();
 
 					}
-				}catch( PlatformManagerException e ){
-					
-						// exception will already have been logged
-					
 				}catch( Throwable e ){
 					
 					Debug.printStackTrace(e);
